{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import * as playwright from \"playwright\";\nimport {devices} from \"playwright\";\nimport {resolve, dirname, basename} from \"path\";\nimport {mkdir, readFileSync, writeFile} from \"fs\";\nimport {fontscript} from \"./critical/fontscript.js\";\nimport {size} from \"./file/size.js\";\nimport {\n    BrowserOptions,\n    CriticalCliResult, CriticalCliStats,\n    CriticalDimension,\n    CriticalExtractOptions,\n    CriticalOptions,\n    CriticalResult,\n    FontObject\n} from \"./@types\";\nimport {Request, ConsoleMessage, BrowserType, Browser, BrowserContext, LaunchOptions, Page} from \"playwright\";\nimport chalk from \"chalk\";\nimport {render, transform} from \"@tbela99/css-parser\";\nimport {createRequire} from 'node:module';\n\nconst __dirname: string = dirname(new URL(import.meta.url).pathname);\nconst require = createRequire(import.meta.url);\n\nconst script: string = readFileSync(require.resolve('@tbela99/critical/umd'), {encoding: \"utf-8\"});\n\nconsole.error(require.resolve('@tbela99/critical/umd'));\n\n// @ts-ignore\nconst deviceNames: Array<{\n    userAgent: string;\n    viewport: any[];\n    screen: any[];\n    deviceScaleFactor: number;\n    isMobile: boolean;\n    hasTouch: boolean;\n    defaultBrowserType: string;\n}> = Object.values(devices);\n\nasync function sleep(duration: number) {\n\n    return new Promise(resolve => setTimeout(resolve, duration + Math.ceil(Math.random() * 10)));\n}\n\nexport async function critical(url: string, options: CriticalOptions = {}): Promise<CriticalCliResult> {\n\n\n    let html: string = '';\n    let fonts: Set<string> = new Set<string>;\n\n    const styles: Set<string> = new Set<string>;\n    const stats: CriticalCliStats[] = [];\n    const browserName: BrowserOptions = <BrowserOptions>(options.randomBrowser ? ['chromium', 'firefox', 'webkit', 'edge', 'chrome'][Math.floor(Math.random() * 5)] : options.browser ?? 'chromium');\n    const chromium: BrowserType = <BrowserType>(['chromium', 'firefox', 'webkit', 'edge', 'chrome'].includes(browserName) &&\n        // @ts-ignore\n        playwright[browserName]) ?? <string>playwright.chromium ?? 'chromium';\n\n    if (['\"', \"'\"].includes(url.charAt(0))) {\n\n        url = url.replace(/^(['\"])([^\\1\\s]+)\\1$/, '$2');\n    }\n\n    if (!url.match(/^([a-zA-Z]+:)?\\/\\//)) {\n\n        url = 'file://' + (url.charAt(0) == '/' ? url : resolve(__dirname + '/' + url));\n    }\n\n    options = {\n\n        headless: true,\n        randomBrowser: false,\n        fonts: true,\n        screenshot: false,\n        console: false,\n        secure: false,\n        filename: '',\n        container: false,\n        html: false,\n        pause: 30,\n        verbose: false,\n        colorScheme: 'dark',\n        output: 'output/', ...options, browser: browserName\n    };\n\n    let theUrl: URL = new URL(url);\n    let filePath: string = <string>options.output + ((<string>options.output).endsWith('/') ? '' : '/') + browserName + (options.browserType != null ? '-' + options.browserType : '') + ('/' + options.colorScheme);\n    let shortUrl: string = (theUrl.protocol == 'file:' ? basename(theUrl.pathname) : theUrl.protocol + '//' + theUrl.host + theUrl.pathname);\n    let dimensions: string | string[] | Array<CriticalDimension>;\n\n    if (filePath.slice(-1) != '/') {\n\n        filePath += '/';\n    }\n\n    if (theUrl.host !== '') {\n\n        filePath += theUrl.host.replace(':', '@') + '/';\n    } else {\n\n        filePath += 'local_files/';\n    }\n\n    if (theUrl.pathname != '/') {\n\n        filePath += basename(theUrl.pathname).replace(/\\.[a-z]{1,4}$/, '').replace(/^[^a-zA-Z0-9_-]+/, '').replace(/[^a-zA-Z0-9_-]+/, '-');\n    } else {\n\n        filePath += 'index'\n    }\n\n    // @ts-ignore\n    filePath = filePath.replace(/[/]+$/, '');\n\n    mkdir(dirname(filePath), {recursive: true}, function (error) {\n\n        if (error) {\n\n            console.error({error});\n        }\n    });\n\n    options.filename = filePath;\n\n    if ('dimensions' in options) {\n\n        dimensions = <string | string[] | Array<CriticalDimension>>options.dimensions;\n    } else {\n\n        dimensions = Number.isInteger(options.width) && Number.isInteger(options.height) ? [{\n            width: +<number>options.width,\n            height: +<number>options.height\n        }] : ['1920x1080', '1440x900', '1366x768', '1024x768', '768x1024', '320x480'];\n    }\n\n    if (typeof dimensions == 'string') {\n\n        dimensions = (<string>dimensions).split(/\\s/)\n    } else if (!Array.isArray(dimensions)) {\n\n        dimensions = [dimensions];\n    }\n\n    dimensions = dimensions.map((dimension: string | CriticalDimension): CriticalDimension => {\n\n        if (typeof dimension == 'string') {\n\n            const parts: string[] = dimension.split(/[xX\"']/g);\n\n            return {\n\n                width: +parts[0],\n                height: +parts[1]\n            }\n        }\n\n        return dimension;\n    });\n\n    dimensions.sort(() => [-1, 0, 1][Math.floor(3 * Math.random())]);\n\n    // @ts-ignore\n    for (const dimension of <CriticalDimension[]>dimensions) {\n\n        const launchOptions: LaunchOptions = <LaunchOptions>{\n            headless: options.headless,\n            bypassCSP: !options.secure,\n            defaultViewport: {\n                isMobile: true,\n                isLandscape: false,\n            },\n            waitForInitialPage: false,\n            args: <string[]>[],\n            ignoreDefaultArgs: ['--enable-automation']\n        };\n\n        const size: string = ` (${dimension.width}x${dimension.height})`\n\n        launchOptions.args = [\n            '--test-type',\n            '--no-startup-window',\n            `--window-size=${(<CriticalDimension>dimension).width},${(<CriticalDimension>dimension).height}`\n        ];\n\n        if (!options.secure) {\n\n            launchOptions.args.push(\n                '--disable-web-security',\n                '--allow-running-insecure-content',\n                '--no-default-browser-check',\n                '--ignore-certificate-errors',\n                '--disable-site-isolation-trials'\n            )\n        }\n\n        if (options.container) {\n\n            launchOptions.args.push(\n                \"--disable-gpu\",\n                \"--disable-dev-shm-usage\",\n                \"--disable-setuid-sandbox\",\n                \"--no-sandbox\"\n            )\n        }\n\n        if (options.verbose || options.console) {\n\n            console.info(chalk.blue(`[${shortUrl}]> selected browser `) + chalk.green(chromium.name()));\n            console.info(chalk.blue(`[${shortUrl}${size}]> set viewport to `) + chalk.green(`${dimension.width}x${dimension.height}`));\n        }\n\n        let contextData = {};\n\n        if (options.browserType != null || options.randomUserAgent || options.randomBrowser) {\n\n            contextData = deviceNames.slice().sort(() => [-1, 0, 1][Math.floor(3 * Math.random())]).filter(d => {\n\n                if (browserName != d.defaultBrowserType) {\n\n                    return false;\n                }\n\n                if (options.browserType != null) {\n\n                    if (options.browserType == 'mobile') {\n\n                        return d.isMobile;\n                    } else {\n\n                        return !d.isMobile;\n                    }\n                }\n\n                return true;\n            })[0];\n        }\n\n        const browser: Browser = <Browser>await chromium.launch(launchOptions);\n        // @ts-ignore\n        const context: BrowserContext = <BrowserContext>await browser.newContext({\n            // @ts-ignore\n            ...contextData,\n            bypassCSP: !options.secure,\n            viewport: dimension\n        });\n\n        if (options.randomUserAgent) {\n\n            // antibot evasion\n            await context.addInitScript(() => {\n\n                Object.defineProperty(navigator, 'webdriver', {get: () => undefined});\n            });\n        }\n\n        await context.addInitScript(script);\n        // await context.addInitScript(minify);\n\n        const page: Page = await context.newPage();\n\n        await page.emulateMedia({\n            colorScheme: options.colorScheme,\n        });\n\n        if (options.console) {\n\n            page.on('console', (message: ConsoleMessage) =>\n                // @ts-ignore\n                console.log(chalk.yellow(`[${shortUrl}${size}]> ${message.type().replace(/^([a-z])/, (all: string, one: string) => one.toUpperCase())} ${message.text()}`)))\n                // @ts-ignore\n                .on('pageerror', ({message}) => console.log(chalk.red(`[${shortUrl}${size}]> ${message}`)))\n                .on('requestfailed', (request: Request) => {\n\n                    const failure = request.failure();\n                    console.log(chalk.red(`[${shortUrl}${size}]> ${failure && failure.errorText} ${request.url()}`))\n                });\n        }\n\n        console.info(chalk.blue(`[${shortUrl}${size}]> open `) + url);\n\n        await page.goto(url, {waitUntil: 'networkidle'});\n\n        if (options.screenshot) {\n\n            const screenshot: {\n                path: string\n            } = typeof options.screenshot == 'object' && Object.assign({}, options.screenshot) || {path: typeof options.screenshot == 'string' && options.screenshot || options.filename + '.png' || 'screenshot.png'}\n\n            if (dimensions.length > 1) {\n\n                screenshot.path = screenshot.path.replace(/\\.([^.]+)$/, `_${dimension.width}x${dimension.height}.\\$1`)\n            }\n\n            if (options.verbose) {\n\n                console.info(chalk.blue(`[${shortUrl}${size}]> generating screenshot at `) + chalk.green(screenshot.path));\n            }\n\n            await page.screenshot(screenshot);\n        }\n\n        if (options.verbose) {\n\n            console.info(chalk.blue(`[${shortUrl}${size}]> collect critical data`));\n        }\n\n        const data = await page.evaluate(async (param: { options: CriticalExtractOptions }) => {\n\n            // @ts-ignore\n            return await critical.extract(param.options).then((result: CriticalResult) => {\n\n                if (Array.isArray(result.fonts)) {\n\n                    // @ts-ignore\n                    result.fonts = <string[]>(result.fonts).map((font: FontObject) => JSON.stringify(font));\n                }\n\n                // @ts-ignore\n                if (param.options.verbose) {\n\n                    console.log(JSON.stringify({result}, null, 1));\n                }\n\n                return result;\n            });\n        }, {options, shortUrl, size});\n\n        if (data.styles != null) {\n\n            data.styles.forEach((line: string) => styles.add(line));\n            data.fonts.forEach((line: string) => fonts.add(line));\n            stats.push({width: dimension.width, height: dimension.height, stats: data.stats});\n\n            if (options.html != null && html === '') {\n\n                html = data.html ?? '';\n            }\n        }\n\n        await page.close();\n        await browser.close();\n\n        if (<number>options.pause > 0) {\n\n            await sleep(<number>options.pause);\n        }\n    }\n\n    if (options.filename) {\n\n        const rawCSS: string = [...styles].join('\\n');\n        const {code, unminified}: { code: string; unminified: string } = (await transform(rawCSS).then(result => {\n\n            return {code: result.code, unminified: render(result.ast, {minify: false}).code}\n        }));\n        const {code: nestedCSS, unminified: nestedUnminified}: { code: string; unminified: string } = (await transform(rawCSS, {nestingRules: true}).then(result => {\n\n            return {code: result.code, unminified: render(result.ast, {minify: false}).code}\n        }));\n\n        let cssFile: string = options.filename;\n\n        if (cssFile.slice(-4) != '.css') {\n\n            cssFile += '.css';\n        }\n\n        const minCssFile: string = cssFile.slice(0, -4) + '.min.css';\n        const rawCssFile: string = cssFile.slice(0, -4) + '.raw.css';\n\n        const minNestedCssFile: string = cssFile.slice(0, -4) + '.nested.min.css';\n        const nestedCssFile: string = cssFile.slice(0, -4) + '.nested.css';\n\n        console.info(chalk.blue(`[${shortUrl}]> writing css at `) + chalk.green(minCssFile + ' [' + size(code.length) + ']'));\n        // @ts-ignore\n        writeFile(minCssFile, code, function (error: Error | null) {\n\n            if (error) {\n\n                console.error(error);\n            }\n        });\n\n        console.info(chalk.blue(`[${shortUrl}]> writing css at `) + chalk.green(cssFile + ' [' + size(unminified.length) + ']'));\n\n        writeFile(cssFile, unminified, function (error: Error | null) {\n\n            if (error) {\n\n                console.error({error});\n            }\n        });\n\n        // @ts-ignore\n        writeFile(rawCssFile, rawCSS, function (error: Error | null) {\n\n            if (error) {\n\n                console.error({error});\n            }\n        });\n\n        console.info(chalk.blue(`[${shortUrl}]> writing css at `) + chalk.green(minNestedCssFile + ' [' + size(nestedCSS.length) + ']'));\n        // @ts-ignore\n        writeFile(minNestedCssFile, nestedCSS, function (error: Error | null) {\n\n            if (error) {\n\n                console.error({error});\n            }\n        });\n\n        console.info(chalk.blue(`[${shortUrl}]> writing css at `) + chalk.green(nestedCssFile + ' [' + size(nestedUnminified.length) + ']'));\n\n        writeFile(nestedCssFile, nestedUnminified, function (error: Error | null) {\n\n            if (error) {\n\n                console.error({error});\n            }\n        });\n\n        // @ts-ignore\n        writeFile(rawCssFile, rawCSS, function (error: Error | null) {\n\n            if (error) {\n\n                console.error({error});\n            }\n        });\n    }\n\n    if (options.html != null && html != null && html !== '') {\n\n        const match: RegExpMatchArray | null = html.match(/<style data-critical=\"true\">((.|[\\r\\n])*?)<\\/style>/);\n\n        if (match) {\n\n            html = html.replace(match[0], `<style data-critical=\"true\">${[...styles].join('\\n')}</style>`);\n        }\n\n        // @ts-ignore\n        writeFile(`${options.filename}.html`, html, function (error: Error) {\n\n            if (error) {\n\n                console.error({error});\n            }\n        });\n    }\n\n    const fontObjects: Set<FontObject> = <Set<FontObject>>new Set([...fonts].map((font: string) => JSON.parse(font)));\n\n    if (options.fonts) {\n\n        let fontJS: string = options.filename;\n        let data: string = '/* no font found! */';\n\n        if (fontJS.slice(-3) != '.js') {\n\n            fontJS += '.js';\n        }\n\n        if (fontObjects.size == 0) {\n\n            console.info(chalk.yellow(`[${shortUrl}]> no preload font found`));\n        } else {\n\n            data = fontscript([...fontObjects]);\n            console.info(chalk.blue(`[${shortUrl}]> writing `) + chalk.green(fontObjects.size.toString()) + chalk.blue(` preload font script at `) +\n                chalk.green(`${fontJS} [` + size(data.length) + ']'));\n        }\n\n        // @ts-ignore\n        writeFile(fontJS, data, function (error) {\n\n            if (error) {\n\n                console.error({error});\n            }\n        });\n    }\n\n    return {styles: [...styles], fonts: [...fonts], stats, html};\n}\n"],"names":[],"mappings":";;;;;;;;;;AAoBA,MAAM,SAAS,GAAW,OAAO,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;AACrE,MAAM,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAE/C,MAAM,MAAM,GAAW,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,EAAC,QAAQ,EAAE,OAAO,EAAC,CAAC,CAAC;AAEnG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC,CAAC;AAExD;AACA,MAAM,WAAW,GAQZ,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAE5B,eAAe,KAAK,CAAC,QAAgB,EAAA;IAEjC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,EAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACjG,CAAC;AAEM,eAAe,QAAQ,CAAC,GAAW,EAAE,UAA2B,EAAE,EAAA;IAGrE,IAAI,IAAI,GAAW,EAAE,CAAC;AACtB,IAAA,IAAI,KAAK,GAAgB,IAAI,GAAW,CAAC;AAEzC,IAAA,MAAM,MAAM,GAAgB,IAAI,GAAW,CAAC;IAC5C,MAAM,KAAK,GAAuB,EAAE,CAAC;AACrC,IAAA,MAAM,WAAW,IAAoC,OAAO,CAAC,aAAa,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,IAAI,UAAU,CAAC,CAAC;AACjM,IAAA,MAAM,QAAQ,GAA6B,CAAC,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC;;QAEjH,UAAU,CAAC,WAAW,CAAC,KAAa,UAAU,CAAC,QAAQ,IAAI,UAAU,CAAC;AAE1E,IAAA,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;QAEpC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;KACnD;IAED,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,oBAAoB,CAAC,EAAE;AAElC,QAAA,GAAG,GAAG,SAAS,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,OAAO,CAAC,SAAS,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;KACnF;AAED,IAAA,OAAO,GAAG;AAEN,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,aAAa,EAAE,KAAK;AACpB,QAAA,KAAK,EAAE,IAAI;AACX,QAAA,UAAU,EAAE,KAAK;AACjB,QAAA,OAAO,EAAE,KAAK;AACd,QAAA,MAAM,EAAE,KAAK;AACb,QAAA,QAAQ,EAAE,EAAE;AACZ,QAAA,SAAS,EAAE,KAAK;AAChB,QAAA,IAAI,EAAE,KAAK;AACX,QAAA,KAAK,EAAE,EAAE;AACT,QAAA,OAAO,EAAE,KAAK;AACd,QAAA,WAAW,EAAE,MAAM;QACnB,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE,WAAW;KACtD,CAAC;AAEF,IAAA,IAAI,MAAM,GAAQ,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,IAAI,QAAQ,GAAmB,OAAO,CAAC,MAAM,IAAa,OAAO,CAAC,MAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,WAAW,IAAI,OAAO,CAAC,WAAW,IAAI,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC,IAAI,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACjN,IAAA,IAAI,QAAQ,IAAY,MAAM,CAAC,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACzI,IAAA,IAAI,UAAwD,CAAC;IAE7D,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;QAE3B,QAAQ,IAAI,GAAG,CAAC;KACnB;AAED,IAAA,IAAI,MAAM,CAAC,IAAI,KAAK,EAAE,EAAE;AAEpB,QAAA,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;KACnD;SAAM;QAEH,QAAQ,IAAI,cAAc,CAAC;KAC9B;AAED,IAAA,IAAI,MAAM,CAAC,QAAQ,IAAI,GAAG,EAAE;AAExB,QAAA,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;KACtI;SAAM;QAEH,QAAQ,IAAI,OAAO,CAAA;KACtB;;IAGD,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;AAEzC,IAAA,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,EAAE,UAAU,KAAK,EAAA;QAEvD,IAAI,KAAK,EAAE;AAEP,YAAA,OAAO,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;SAC1B;AACL,KAAC,CAAC,CAAC;AAEH,IAAA,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAE5B,IAAA,IAAI,YAAY,IAAI,OAAO,EAAE;AAEzB,QAAA,UAAU,GAAiD,OAAO,CAAC,UAAU,CAAC;KACjF;SAAM;QAEH,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;AAChF,gBAAA,KAAK,EAAE,CAAS,OAAO,CAAC,KAAK;AAC7B,gBAAA,MAAM,EAAE,CAAS,OAAO,CAAC,MAAM;AAClC,aAAA,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;KACjF;AAED,IAAA,IAAI,OAAO,UAAU,IAAI,QAAQ,EAAE;AAE/B,QAAA,UAAU,GAAY,UAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;KAChD;SAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAEnC,QAAA,UAAU,GAAG,CAAC,UAAU,CAAC,CAAC;KAC7B;IAED,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,SAAqC,KAAuB;AAErF,QAAA,IAAI,OAAO,SAAS,IAAI,QAAQ,EAAE;YAE9B,MAAM,KAAK,GAAa,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAEnD,OAAO;AAEH,gBAAA,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAChB,gBAAA,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;aACpB,CAAA;SACJ;AAED,QAAA,OAAO,SAAS,CAAC;AACrB,KAAC,CAAC,CAAC;AAEH,IAAA,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;;AAGjE,IAAA,KAAK,MAAM,SAAS,IAAyB,UAAU,EAAE;AAErD,QAAA,MAAM,aAAa,GAAiC;YAChD,QAAQ,EAAE,OAAO,CAAC,QAAQ;AAC1B,YAAA,SAAS,EAAE,CAAC,OAAO,CAAC,MAAM;AAC1B,YAAA,eAAe,EAAE;AACb,gBAAA,QAAQ,EAAE,IAAI;AACd,gBAAA,WAAW,EAAE,KAAK;AACrB,aAAA;AACD,YAAA,kBAAkB,EAAE,KAAK;AACzB,YAAA,IAAI,EAAY,EAAE;YAClB,iBAAiB,EAAE,CAAC,qBAAqB,CAAC;SAC7C,CAAC;QAEF,MAAM,IAAI,GAAW,CAAA,EAAA,EAAK,SAAS,CAAC,KAAK,CAAA,CAAA,EAAI,SAAS,CAAC,MAAM,CAAA,CAAA,CAAG,CAAA;QAEhE,aAAa,CAAC,IAAI,GAAG;YACjB,aAAa;YACb,qBAAqB;AACrB,YAAA,CAAA,cAAA,EAAqC,SAAU,CAAC,KAAK,IAAwB,SAAU,CAAC,MAAM,CAAE,CAAA;SACnG,CAAC;AAEF,QAAA,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AAEjB,YAAA,aAAa,CAAC,IAAI,CAAC,IAAI,CACnB,wBAAwB,EACxB,kCAAkC,EAClC,4BAA4B,EAC5B,6BAA6B,EAC7B,iCAAiC,CACpC,CAAA;SACJ;AAED,QAAA,IAAI,OAAO,CAAC,SAAS,EAAE;AAEnB,YAAA,aAAa,CAAC,IAAI,CAAC,IAAI,CACnB,eAAe,EACf,yBAAyB,EACzB,0BAA0B,EAC1B,cAAc,CACjB,CAAA;SACJ;QAED,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE;YAEpC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAI,CAAA,EAAA,QAAQ,CAAsB,oBAAA,CAAA,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC5F,YAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,CAAA,EAAI,QAAQ,CAAA,EAAG,IAAI,CAAA,mBAAA,CAAqB,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAG,EAAA,SAAS,CAAC,KAAK,CAAI,CAAA,EAAA,SAAS,CAAC,MAAM,CAAE,CAAA,CAAC,CAAC,CAAC;SAC9H;QAED,IAAI,WAAW,GAAG,EAAE,CAAC;AAErB,QAAA,IAAI,OAAO,CAAC,WAAW,IAAI,IAAI,IAAI,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,aAAa,EAAE;AAEjF,YAAA,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAG;AAE/F,gBAAA,IAAI,WAAW,IAAI,CAAC,CAAC,kBAAkB,EAAE;AAErC,oBAAA,OAAO,KAAK,CAAC;iBAChB;AAED,gBAAA,IAAI,OAAO,CAAC,WAAW,IAAI,IAAI,EAAE;AAE7B,oBAAA,IAAI,OAAO,CAAC,WAAW,IAAI,QAAQ,EAAE;wBAEjC,OAAO,CAAC,CAAC,QAAQ,CAAC;qBACrB;yBAAM;AAEH,wBAAA,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;qBACtB;iBACJ;AAED,gBAAA,OAAO,IAAI,CAAC;AAChB,aAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACT;QAED,MAAM,OAAO,GAAqB,MAAM,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;;AAEvE,QAAA,MAAM,OAAO,GAAmC,MAAM,OAAO,CAAC,UAAU,CAAC;;AAErE,YAAA,GAAG,WAAW;AACd,YAAA,SAAS,EAAE,CAAC,OAAO,CAAC,MAAM;AAC1B,YAAA,QAAQ,EAAE,SAAS;AACtB,SAAA,CAAC,CAAC;AAEH,QAAA,IAAI,OAAO,CAAC,eAAe,EAAE;;AAGzB,YAAA,MAAM,OAAO,CAAC,aAAa,CAAC,MAAK;AAE7B,gBAAA,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,EAAE,EAAC,GAAG,EAAE,MAAM,SAAS,EAAC,CAAC,CAAC;AAC1E,aAAC,CAAC,CAAC;SACN;AAED,QAAA,MAAM,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;;AAGpC,QAAA,MAAM,IAAI,GAAS,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;QAE3C,MAAM,IAAI,CAAC,YAAY,CAAC;YACpB,WAAW,EAAE,OAAO,CAAC,WAAW;AACnC,SAAA,CAAC,CAAC;AAEH,QAAA,IAAI,OAAO,CAAC,OAAO,EAAE;YAEjB,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,OAAuB;;AAEvC,YAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAI,CAAA,EAAA,QAAQ,CAAG,EAAA,IAAI,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,GAAW,EAAE,GAAW,KAAK,GAAG,CAAC,WAAW,EAAE,CAAC,CAAA,CAAA,EAAI,OAAO,CAAC,IAAI,EAAE,CAAE,CAAA,CAAC,CAAC,CAAC;;iBAE3J,EAAE,CAAC,WAAW,EAAE,CAAC,EAAC,OAAO,EAAC,KAAK,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,CAAA,EAAI,QAAQ,CAAA,EAAG,IAAI,CAAA,GAAA,EAAM,OAAO,CAAA,CAAE,CAAC,CAAC,CAAC;AAC1F,iBAAA,EAAE,CAAC,eAAe,EAAE,CAAC,OAAgB,KAAI;AAEtC,gBAAA,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,CAAA,EAAI,QAAQ,CAAA,EAAG,IAAI,CAAA,GAAA,EAAM,OAAO,IAAI,OAAO,CAAC,SAAS,CAAI,CAAA,EAAA,OAAO,CAAC,GAAG,EAAE,CAAA,CAAE,CAAC,CAAC,CAAA;AACpG,aAAC,CAAC,CAAC;SACV;AAED,QAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,CAAA,EAAI,QAAQ,CAAA,EAAG,IAAI,CAAU,QAAA,CAAA,CAAC,GAAG,GAAG,CAAC,CAAC;AAE9D,QAAA,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAC,SAAS,EAAE,aAAa,EAAC,CAAC,CAAC;AAEjD,QAAA,IAAI,OAAO,CAAC,UAAU,EAAE;AAEpB,YAAA,MAAM,UAAU,GAEZ,OAAO,OAAO,CAAC,UAAU,IAAI,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,EAAC,IAAI,EAAE,OAAO,OAAO,CAAC,UAAU,IAAI,QAAQ,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,QAAQ,GAAG,MAAM,IAAI,gBAAgB,EAAC,CAAA;AAE1M,YAAA,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBAEvB,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAI,CAAA,EAAA,SAAS,CAAC,KAAK,CAAA,CAAA,EAAI,SAAS,CAAC,MAAM,CAAM,IAAA,CAAA,CAAC,CAAA;aACzG;AAED,YAAA,IAAI,OAAO,CAAC,OAAO,EAAE;gBAEjB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAI,CAAA,EAAA,QAAQ,CAAG,EAAA,IAAI,8BAA8B,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aAC9G;AAED,YAAA,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACrC;AAED,QAAA,IAAI,OAAO,CAAC,OAAO,EAAE;AAEjB,YAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAI,CAAA,EAAA,QAAQ,CAAG,EAAA,IAAI,CAA0B,wBAAA,CAAA,CAAC,CAAC,CAAC;SAC3E;QAED,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,KAA0C,KAAI;;AAGlF,YAAA,OAAO,MAAM,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,MAAsB,KAAI;gBAEzE,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;;oBAG7B,MAAM,CAAC,KAAK,GAAa,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAgB,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC3F;;AAGD,gBAAA,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE;AAEvB,oBAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,MAAM,EAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;iBAClD;AAED,gBAAA,OAAO,MAAM,CAAC;AAClB,aAAC,CAAC,CAAC;SACN,EAAE,EAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;AAE9B,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;AAErB,YAAA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAY,KAAK,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AACxD,YAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAY,KAAK,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACtD,KAAK,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;YAElF,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,EAAE,EAAE;AAErC,gBAAA,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;aAC1B;SACJ;AAED,QAAA,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;AACnB,QAAA,MAAM,OAAO,CAAC,KAAK,EAAE,CAAC;AAEtB,QAAA,IAAY,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE;AAE3B,YAAA,MAAM,KAAK,CAAS,OAAO,CAAC,KAAK,CAAC,CAAC;SACtC;KACJ;AAED,IAAA,IAAI,OAAO,CAAC,QAAQ,EAAE;QAElB,MAAM,MAAM,GAAW,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9C,QAAA,MAAM,EAAC,IAAI,EAAE,UAAU,EAAC,IAA0C,MAAM,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,IAAG;YAEpG,OAAO,EAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC,IAAI,EAAC,CAAA;SACnF,CAAC,CAAC,CAAC;QACJ,MAAM,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,gBAAgB,EAAC,IAA0C,MAAM,SAAS,CAAC,MAAM,EAAE,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC,IAAI,CAAC,MAAM,IAAG;YAEvJ,OAAO,EAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC,IAAI,EAAC,CAAA;SACnF,CAAC,CAAC,CAAC;AAEJ,QAAA,IAAI,OAAO,GAAW,OAAO,CAAC,QAAQ,CAAC;QAEvC,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE;YAE7B,OAAO,IAAI,MAAM,CAAC;SACrB;AAED,QAAA,MAAM,UAAU,GAAW,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;AAC7D,QAAA,MAAM,UAAU,GAAW,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;AAE7D,QAAA,MAAM,gBAAgB,GAAW,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC;AAC1E,QAAA,MAAM,aAAa,GAAW,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;AAEnE,QAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,CAAA,EAAI,QAAQ,CAAA,kBAAA,CAAoB,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;AAEtH,QAAA,SAAS,CAAC,UAAU,EAAE,IAAI,EAAE,UAAU,KAAmB,EAAA;YAErD,IAAI,KAAK,EAAE;AAEP,gBAAA,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACxB;AACL,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,CAAA,EAAI,QAAQ,CAAA,kBAAA,CAAoB,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAEzH,QAAA,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,KAAmB,EAAA;YAExD,IAAI,KAAK,EAAE;AAEP,gBAAA,OAAO,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;aAC1B;AACL,SAAC,CAAC,CAAC;;AAGH,QAAA,SAAS,CAAC,UAAU,EAAE,MAAM,EAAE,UAAU,KAAmB,EAAA;YAEvD,IAAI,KAAK,EAAE;AAEP,gBAAA,OAAO,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;aAC1B;AACL,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,CAAA,EAAI,QAAQ,CAAA,kBAAA,CAAoB,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;AAEjI,QAAA,SAAS,CAAC,gBAAgB,EAAE,SAAS,EAAE,UAAU,KAAmB,EAAA;YAEhE,IAAI,KAAK,EAAE;AAEP,gBAAA,OAAO,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;aAC1B;AACL,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,CAAA,EAAI,QAAQ,CAAA,kBAAA,CAAoB,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAErI,QAAA,SAAS,CAAC,aAAa,EAAE,gBAAgB,EAAE,UAAU,KAAmB,EAAA;YAEpE,IAAI,KAAK,EAAE;AAEP,gBAAA,OAAO,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;aAC1B;AACL,SAAC,CAAC,CAAC;;AAGH,QAAA,SAAS,CAAC,UAAU,EAAE,MAAM,EAAE,UAAU,KAAmB,EAAA;YAEvD,IAAI,KAAK,EAAE;AAEP,gBAAA,OAAO,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;aAC1B;AACL,SAAC,CAAC,CAAC;KACN;AAED,IAAA,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,EAAE,EAAE;QAErD,MAAM,KAAK,GAA4B,IAAI,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;QAEzG,IAAI,KAAK,EAAE;YAEP,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAA,4BAAA,EAA+B,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAU,QAAA,CAAA,CAAC,CAAC;SAClG;;QAGD,SAAS,CAAC,CAAG,EAAA,OAAO,CAAC,QAAQ,OAAO,EAAE,IAAI,EAAE,UAAU,KAAY,EAAA;YAE9D,IAAI,KAAK,EAAE;AAEP,gBAAA,OAAO,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;aAC1B;AACL,SAAC,CAAC,CAAC;KACN;IAED,MAAM,WAAW,GAAqC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAY,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAElH,IAAA,IAAI,OAAO,CAAC,KAAK,EAAE;AAEf,QAAA,IAAI,MAAM,GAAW,OAAO,CAAC,QAAQ,CAAC;QACtC,IAAI,IAAI,GAAW,sBAAsB,CAAC;QAE1C,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE;YAE3B,MAAM,IAAI,KAAK,CAAC;SACnB;AAED,QAAA,IAAI,WAAW,CAAC,IAAI,IAAI,CAAC,EAAE;AAEvB,YAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,CAAA,EAAI,QAAQ,CAAA,wBAAA,CAA0B,CAAC,CAAC,CAAC;SACtE;aAAM;YAEH,IAAI,GAAG,UAAU,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;AACpC,YAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,CAAA,EAAI,QAAQ,CAAA,WAAA,CAAa,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,0BAA0B,CAAC;AAClI,gBAAA,KAAK,CAAC,KAAK,CAAC,CAAG,EAAA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SAC7D;;AAGD,QAAA,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,KAAK,EAAA;YAEnC,IAAI,KAAK,EAAE;AAEP,gBAAA,OAAO,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;aAC1B;AACL,SAAC,CAAC,CAAC;KACN;AAED,IAAA,OAAO,EAAC,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;AACjE;;;;"}