{"version":3,"file":"browser-umd.js","sources":["../src/file/download.ts","../src/file/path.ts","../src/critical/fontscript.ts","../src/critical/extract.ts","../src/browser.ts"],"sourcesContent":["/**\n *\n * @param {string[]} content\n * @param {string} filename\n * @param {string} mimetype\n * @return {Promise<string[]>}\n */\nexport async function download(content: Array<string>, filename: string, mimetype: string = 'application/octet-stream; charset=utf-8'): Promise<Array<string>> {\n\n    //\n    const url: string = URL.createObjectURL(new Blob(content, {type: mimetype}));\n    // @ts-ignore\n    const a: HTMLAnchorElement = document.createElement('a');\n    // @ts-ignore\n    document.body.append(a);\n    a.style.display = 'none';\n    a.download = filename;\n    a.href = url;\n\n    // @ts-ignore\n    a.dispatchEvent(new MouseEvent('click'));\n    URL.revokeObjectURL(url);\n\n    return content;\n}","\nexport function resolve(path: string, from: string): string {\n\n    if (path.match(/^['\"]?data:/)) {\n\n        return path;\n    }\n\n    // @ts-ignore\n    const baseURL: URL = new URL(from, window.location);\n    const pathURL: URL = new URL(path, baseURL);\n\n    if (baseURL.protocol != pathURL.protocol ||\n        baseURL.host != pathURL.host ||\n        pathURL.host != window.location.host ||\n        baseURL.port != pathURL.port ||\n        pathURL.port != window.location.port ||\n        baseURL.port != pathURL.port ||\n        pathURL.protocol != window.location.protocol\n    ) {\n\n        return pathURL.toString();\n    }\n\n    return pathURL.pathname + pathURL.search + pathURL.hash;\n}","import type {FontObject} from \"../@types\";\n\nexport function fontscript(fonts: FontObject[]): string {\n\n    return '/* font preloader script: ' + fonts.length + ' */\\n\"fonts\" in document && ' + JSON.stringify([...fonts], null, 1) + '.forEach(font => new FontFace(font.fontFamily, font.src, font.properties).load().then(font => document.fonts.add(font)))'\n}","import {resolve} from \"../file\";\nimport {fontscript} from \"./fontscript\";\nimport type {\n    CriticalExtractOptions,\n    CriticalResult,\n    FileMapObject,\n    FontObject,\n    MatchCSSStyleSheet,\n    RuleList\n} from \"../@types\";\n\nexport async function extract(options: CriticalExtractOptions = {}): Promise<CriticalResult> {\n\n    // @ts-ignore\n    const document: Document = window.document;\n    // @ts-ignore\n    const location: Location = window.location;\n    const styles: Set<string> = new Set;\n    const excluded: string[] = ['all', 'print', ''];\n    const allStylesheets: MatchCSSStyleSheet[] = [];\n\n    // Get a list of all the elements in the view.\n    // @ts-ignore\n    const height: number = window.innerHeight;\n    // @ts-ignore\n    const walker: NodeIterator = document.createNodeIterator(document, NodeFilter.SHOW_ELEMENT, {acceptNode: () => NodeFilter.SHOW_ELEMENT});\n    // @ts-ignore\n    const fonts: Set<CSSFontFaceRule> = new Set;\n    const fontFamilies: Set<string> = new Set;\n    // @ts-ignore\n    const files: Map<CSSStyleSheet, FileMapObject> = new Map;\n    // @ts-ignore\n    const weakMap: WeakMap<RuleList | CSSStyleSheet, number> = new WeakMap;\n    // @ts-ignore\n    const nodeMap: Set<Node> = new Set;\n    let nodeCount: number = 0;\n    let k: number;\n    // @ts-ignore\n    let rule: CSSMediaRule | CSSStyleRule;\n    let rules;\n\n    performance.mark('filterStylesheets');\n\n    for (k = 0; k < document.styleSheets.length; k++) {\n\n        // @ts-ignore\n        rule = <CSSMediaRule>document.styleSheets[k];\n\n        // @ts-ignore\n        if (rule.media.mediaText === 'print' || (rule.media.mediaText !== '' && !window.matchMedia(rule.media.mediaText).matches)) {\n\n            continue;\n        }\n\n        try {\n\n            // @ts-ignore\n            rules = (<CSSStyleSheet>rule).cssRules ?? (<CSSStyleSheet>rule).rules;\n\n            for (let l = 0; l < rules.length; l++) {\n\n                allStylesheets.push({rule: rules[l], match: false})\n            }\n\n        } catch (e) {\n\n            // @ts-ignore\n            console.error(JSON.stringify({'message': e.message, stylesheet: rule.href}, null, 1));\n        }\n    }\n\n    performance.measure('filter stylesheets', 'filterStylesheets');\n\n    if (allStylesheets.length === 0) {\n\n        // @ts-ignore\n        return <CriticalResult>{styles: [], fonts: [], stats: {}, nodeCount: 0};\n    }\n\n    let node;\n    let rect;\n    let allStylesLength = allStylesheets.length;\n\n    performance.mark('nodeWalking');\n\n    // @ts-ignore\n    while ((node = <HTMLElement>walker.nextNode())) {\n\n        if (options && options.signal && options.signal.aborted) {\n\n            return Promise.reject('Aborted');\n        }\n\n        if (['SCRIPT', 'LINK', 'HEAD', 'META', 'TITLE', 'NOSCRIPT'].includes(node.tagName)) {\n\n            continue;\n        }\n\n        nodeCount++;\n        rect = node.getBoundingClientRect();\n\n        if (rect.top < height) {\n\n            nodeMap.add(node);\n        }\n    }\n\n    for (k = 0; k < allStylesLength; k++) {\n\n        if (allStylesheets[k].match || weakMap.has(allStylesheets[k].rule)) {\n\n            continue;\n        }\n\n        weakMap.set(allStylesheets[k].rule, 1);\n\n        // @ts-ignore\n        if (allStylesheets[k].rule instanceof CSSStyleRule) {\n\n            // @ts-ignore\n            let selector = allStylesheets[k].rule.selectorText;\n            let match;\n\n            // detect pseudo selectors\n            if (selector.match(/(^|,|\\s)::?((before)|(after))/)) {\n\n                match = true\n            } else {\n\n                if (selector.match(/::?((before)|(after))/)) {\n\n                    selector = selector.replace(/::?((before)|(after))\\s*((,)|$)/g, '$5');\n                }\n\n                try {\n\n                    match = nodeMap.has(document.querySelector(selector));\n                } catch (e) {\n\n                    // @ts-ignore\n                    match = nodeMap.has(document.querySelector(allStylesheets[k].rule.selectorText));\n                }\n            }\n\n            if (match) {\n\n                allStylesheets[k].match = true;\n\n                // @ts-ignore\n                if (allStylesheets[k].rule.style.getPropertyValue('font-family')) {\n\n                    // @ts-ignore\n                    allStylesheets[k].rule.style.getPropertyValue('font-family').split(/\\s*,\\s*/).forEach(fontFamily => fontFamily !== 'inherit' && fontFamilies.add(fontFamily.replace(/(['\"])([^\\1\\s]+)\\1/, '$2')));\n                }\n            }\n\n            // @ts-ignore\n        } else if (allStylesheets[k].rule instanceof CSSMediaRule || allStylesheets[k].rule instanceof CSSImportRule || allStylesheets[k].rule instanceof CSSConditionRule) {\n\n            // @ts-ignore\n            if ((allStylesheets[k].rule instanceof CSSMediaRule || allStylesheets[k].rule instanceof CSSImportRule) && (allStylesheets[k].rule.media.mediaText === 'print' || (allStylesheets[k].rule.media.mediaText !== '' && !window.matchMedia(allStylesheets[k].rule.media.mediaText).matches))) {\n                continue;\n            }\n\n            try {\n\n                const rule = allStylesheets[k].rule;\n                const rules = [];\n                // @ts-ignore\n                const sheet = rule instanceof CSSImportRule ? rule.styleSheet.cssRules || rule.styleSheet.rules : rule.cssRules || rule.rules;\n\n                for (let l = 0; l < sheet.length; l++) {\n\n                    if (!weakMap.has(sheet[l])) {\n\n                        rules.push({rule: sheet[l], match: false})\n                    }\n                }\n\n                if (rules.length > 0) {\n\n                    // @ts-ignore\n                    allStylesheets.splice.apply(allStylesheets, [k + 1, 0].concat(rules))\n                    allStylesLength = allStylesheets.length\n                }\n            } catch (e) {\n\n                // @ts-ignore\n                console.error(JSON.stringify({'message': e.message, stylesheet: rule.href}, null, 1));\n            }\n\n            // @ts-ignore\n        } else if (allStylesheets[k].rule instanceof CSSFontFaceRule) {\n\n            // @ts-ignore\n            if (allStylesheets[k].rule.style.getPropertyValue('font-family') && allStylesheets[k].rule.style.getPropertyValue('src')) {\n\n                // @ts-ignore\n                fonts.add(allStylesheets[k].rule);\n            }\n        }\n    }\n\n    performance.measure('node walking', 'nodeWalking');\n\n    let css;\n    let file = '';\n    let inlineCount = -1;\n\n    performance.mark('rulesExtraction');\n\n    loop1:\n        for (let k = 0; k < allStylesLength; k++) {\n\n            if (!allStylesheets[k].match) {\n\n                continue;\n            }\n\n            // @ts-ignore\n            rule = allStylesheets[k].rule;\n            let fileUpdate: boolean = false;\n\n            // @ts-ignore\n            if (!files.has(rule.parentStyleSheet)) {\n\n                //\n                // @ts-ignore\n                files.set(rule.parentStyleSheet, {\n\n                    // @ts-ignore\n                    base: (rule.parentStyleSheet.href && rule.parentStyleSheet.href.replace(/[?#].*/, '') || location.pathname).replace(/([^/]+)$/, ''),\n                    // @ts-ignore\n                    file: rule.parentStyleSheet.href || `inline style #${++inlineCount}`\n                });\n\n                fileUpdate = true;\n            } else { // @ts-ignore\n                if (file != null && file !== files.get(rule.parentStyleSheet).file) {\n\n                    fileUpdate = true;\n                }\n            }\n\n            if (fileUpdate) {\n\n                try {\n\n                    // @ts-ignore\n                    console.error('analysing ' + files.get(rule.parentStyleSheet).file);\n                    // @ts-ignore\n                    styles.add('/* file: ' + files.get(rule.parentStyleSheet).file + ' */');\n                } catch (e) {\n\n                    // @ts-ignore\n                    console.error(JSON.stringify(e.message, null, 1));\n                    console.error(JSON.stringify(rule?.parentStyleSheet?.href, null, 1));\n                }\n            }\n\n            // @ts-ignore\n            file = (<FileMapObject>files.get(<CSSStyleSheet>rule.parentStyleSheet)).file;\n            css = rule.cssText;\n\n            // @ts-ignore\n            console.error({sel: rule.selectorText, css});\n\n            if (file !== 'inline') {\n\n                // @ts-ignore@\n                css = css.replace(/url\\(([^)%\\s]*?)\\)/g, function (all, one) {\n\n                    one = one.trim();\n\n                    if (one.match(/^['\"]?data:/)) {\n\n                        return all;\n                    }\n\n                    // @ts-ignore\n                    one = one.replace(/^(['\"])([^\\1\\s]+)\\1/, '$2');\n\n                    // @ts-ignore\n                    return 'url(' + resolve(one, files.get(rule.parentStyleSheet).base) + ')';\n                })\n            }\n\n            while (rule.parentRule) {\n\n                /**\n                 *\n                 * @type {CSSMediaRule}\n                 */\n                // @ts-ignore\n                rule = rule.parentRule;\n\n                // @ts-ignore\n                if (rule.conditionText == 'print') {\n\n                    continue loop1;\n                }\n\n                // @ts-ignore\n                if (!excluded.includes(rule.conditionText)) {\n\n                    // @ts-ignore\n                    css = '@' + rule.constructor.name.replace(/^CSS(.*?)Rule/, '$1').toLowerCase() + ' ' + rule.conditionText + ' {' + css + '}';\n                }\n\n                if (!rule.parentRule) {\n\n                    break;\n                }\n            }\n\n            if (rule.parentStyleSheet) {\n\n                let media: string = rule.parentStyleSheet.media.mediaText;\n\n                if (media === 'print') {\n\n                    continue;\n                }\n\n                if (media !== '') {\n\n                    css = '@media ' + media + ' {' + css + '}';\n                }\n            }\n\n            if (styles.has(css)) {\n\n                styles.delete(css);\n            }\n\n            styles.add(css);\n        }\n\n    performance.measure('rules extraction', 'rulesExtraction');\n\n    const usedFonts = new Map;\n\n    if (options.fonts) {\n\n        let j;\n        let name;\n        let value;\n        // @ts-ignore\n        let font: CSSFontFaceRule;\n        let fontObject;\n        let src;\n\n        performance.mark('fontsExtraction');\n\n        for (font of fonts) {\n\n            if (font.style.getPropertyValue('font-family').split(/\\s*,\\s*/).some((token: string) => {\n\n                // @ts-ignore\n                return fontFamilies.has(token.replace(/(['\"])([^\\1\\s]+)\\1/, '$2'));\n            })) {\n\n                src = font.style.getPropertyValue('src');\n\n                if (!src) {\n\n                    continue;\n                }\n\n                fontObject = {\n                    // @ts-ignore\n                    'fontFamily': font.style.getPropertyValue('font-family').replace(/(['\"])([^\\1\\s]+)\\1/, '$2'),\n                    // @ts-ignore\n                    src: src.replace(/(^|[,\\s*])local\\([^)]+\\)\\s*,?\\s*?/g, '').replace(/url\\(([^)%\\s]+)\\)([^,]*)(,?)\\s*/g, (all, one, two, three) => {\n\n                        // @ts-ignore\n                        one = one.replace(/(['\"])([^\\1\\s]+)\\1/, '$2');\n\n                        // @ts-ignore\n                        if (!files.has(font.parentStyleSheet)) {\n\n                            // @ts-ignore\n                            if (!font.parentStyleSheet.href) {\n\n                                return all;\n                            }\n\n                            // @ts-ignore\n                            files.set(font.parentStyleSheet, {\n\n                                // @ts-ignore\n                                base: font.parentStyleSheet.href.replace(/([^/]+)$/, ''),\n                                // @ts-ignore\n                                file: font.parentStyleSheet.href\n                            })\n                        }\n\n                        // @ts-ignore\n                        return 'url(' + resolve(one, files.get(font.parentStyleSheet).base) + ')' + three;\n                    }).trim(),\n                    properties: {}\n                }\n\n                j = font.style.length;\n\n                while (j--) {\n\n                    name = font.style.item(j);\n                    value = font.style.getPropertyValue(name);\n\n                    name !== 'font-family' &&\n                    name !== 'src' &&\n                    value !== '' &&\n                    value !== undefined &&\n                    // @ts-ignore\n                    (fontObject.properties[name.replace(/([A-Z])/g, (all, name) => '-' + name.toLowerCase())] = value)\n                }\n\n                usedFonts.set(JSON.stringify(fontObject), fontObject)\n            }\n        }\n\n        performance.measure('fonts extraction', 'fontsExtraction');\n    }\n\n    const stats = performance.getEntriesByType(\"measure\").filter(entry => ['filter stylesheets', 'node walking', 'rules extraction', 'fonts extraction'].includes(entry.name)).map(entry => {\n\n        return {\n\n            name: entry.name,\n            duration: (entry.duration / 1000).toFixed(3) + 's'\n        }\n    });\n\n\n    const result: CriticalResult = {\n        styles: [...styles],\n        fonts: [...usedFonts.values()],\n        nodeCount,\n        stats: {nodeCount, stats}\n    };\n\n    if (options.html) {\n\n        if (!document.querySelector('base')) {\n\n            // @ts-ignore\n            const base: HTMLBaseElement = document.createElement('base');\n\n            base.href = options.base ?? (location.protocol + '//' + location.host + location.pathname);\n            document.head.insertBefore(base, document.querySelector('meta[charset]')?.nextElementSibling || document.head.firstChild)\n        }\n\n        if (!document.querySelector('meta[charset]')) {\n\n            const meta = document.createElement('meta');\n            meta.setAttribute('charset', 'utf-8');\n            document.head.insertBefore(meta, document.head.firstChild)\n        }\n\n        // @ts-ignore\n        Array.from(document.querySelectorAll('style,link[rel=stylesheet]')).forEach((node: HTMLLinkElement | HTMLStyleElement) => {\n\n            document.body.append(node);\n\n            if (node.tagName === 'LINK') {\n\n                if (node.media === 'print') {\n\n                    return\n                }\n\n                if (node.hasAttribute('media')) {\n\n                    node.setAttribute('data-media', node.media);\n                }\n\n                node.media = 'print';\n                node.dataset.async = '';\n            }\n        });\n\n        // @ts-ignore\n        const script: HTMLScriptElement = document.createElement('script');\n\n        script.textContent = `\n        window.addEventListener('DOMContentLoaded', () => Array.from(document.querySelectorAll('link[data-async]')).forEach(node => {\n\n                if(!node.hasAttribute('data-media')) {\n                    node.removeAttribute('media');\n                }\n                else {\n                    node.media=node.dataset.media;\n                    node.removeAttribute('data-media')\n                }\n                \n                node.removeAttribute('data-async');\n        }))`;\n\n        document.head.append(script);\n\n        // @ts-ignore\n        const style: HTMLStyleElement = document.createElement('style');\n        // @ts-ignore\n        style.dataset.critical = true;\n        style.textContent = [...usedFonts.values()].map((entry) => {\n\n                return '@font-face {' + '\\n ' + Object.entries(entry).map(entry => {\n\n                    // @ts-ignore\n                    return typeof entry[1] == 'string' ? `${entry[0] + ': ' + entry[1]}` : Object.entries(entry[1]).map(entry => `${entry[0] + ': ' + entry[1]}`).join(';\\n ') + '\\n}'\n                }).join(';\\n')\n            }).join('\\n') +\n            '\\n' + (<string[]>result.styles).join('\\n');\n\n        if (style.textContent.trim() !== '') {\n\n            // @ts-ignore\n            document.head.insertBefore(style, <HTMLBaseElement | null>document.querySelector('base')?.nextElementSibling);\n        }\n\n        if ((<FontObject[]>result.fonts).length > 0) {\n\n            // @ts-ignore\n            const script: HTMLScriptElement = document.createElement('script');\n            script.textContent = fontscript(<FontObject[]>result.fonts);\n            document.head.append(script);\n        }\n\n        // @ts-ignore\n        const doctype: DocumentType = document.doctype as DocumentType;\n\n        // @ts-ignore\n        result.html = `<!Doctype ${doctype.name}`\n            + (doctype.publicId ? ` PUBLIC \"${doctype.publicId}\"` : '')\n            + (doctype.systemId\n                ? (doctype.publicId ? `` : ` SYSTEM`) + ` \"${doctype.systemId}\"`\n                : ``)\n            // @ts-ignore\n            + `>` + '\\n' + document.documentElement.outerHTML\n    }\n\n    return result;\n}\n","import {extract, fontscript} from \"./critical\";\nimport {download} from \"./file\";\nimport type {CriticalExtractOptions, CriticalResult} from \"./@types\";\n\nasync function extractAndDownload(filename: string = 'critical.css', options: CriticalExtractOptions = {}): Promise<CriticalResult> {\n\n    return extract(options).then(async (content: CriticalResult): Promise<CriticalResult> => download(<string[]>content.styles, filename, 'text/css; charset=utf-8').then(async () => {\n\n            if ((<string[]>content.fonts).length > 0) {\n\n                // @ts-ignore\n                return download([fontscript(<string[]>content.fonts)], filename.replace(/\\.css$/, '.js'), 'text/javascript; charset=utf-8');\n            }\n        }).then(() => content)\n    );\n}\n\nexport {extract, fontscript, extractAndDownload as download}"],"names":[],"mappings":"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"}